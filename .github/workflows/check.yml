name: CI

# Controls when the action will run. Triggers the workflow on push or pull
# request events, but only for the `master` branch (generally) or the `citest`
# branch (for testing).
on:
  push:
    branches: [master, citest]
  pull_request:
    branches: [master]

jobs:
  generate_versions:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE for the job.
      - uses: actions/checkout@v2

      - name: Gradle test
        run: |
          ./gradlew -p plugin generateTestTasksJson

      - id: setup-matrix
        run: echo "::set-output name=matrix::$(cat plugin/build/build-resources/androidTestTasks.json)"

      - name: debug
        run: echo ${{ steps.setup-matrix.outputs.matrix }}

    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}

  android_unversioned_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE for the job.
      - uses: actions/checkout@v2

      # Per https://github.com/actions/cache/blob/c7c46bcb6db3c571021a3a2dc2d2557b512ecace/examples.md#rust---cargo.
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            plugin/build/resources/test/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        run: |
          rustup toolchain install stable
          rustup target add x86_64-linux-android
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-linux-android

      # Use Java 8
      - name: Setup Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'gradle'

      - name: Gradle setup
        run: |
          ./gradlew -p plugin tasks --warning-mode all

      - name: Gradle test
        run: |
          ./gradlew -p plugin test --info --warning-mode all

  android_version_tests:
    needs: [generate_versions] # , sanity_check]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        androidTestTask: ${{ fromJson(needs.generate_versions.outputs.matrix) }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2


      # Per https://github.com/actions/cache/blob/c7c46bcb6db3c571021a3a2dc2d2557b512ecace/examples.md#rust---cargo.
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            plugin/build/resources/test/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        run: |
          rustup toolchain install stable
          rustup target add x86_64-linux-android
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-linux-android

      # Use Java 8
      - name: Setup Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'gradle'

      - name: Gradle setup
        run: |
          ./gradlew -p plugin tasks --warning-mode all

      - name: Gradle test
        run: |
          ./gradlew -p plugin ${{ matrix.androidTestTask }} --info --warning-mode all

      # # Gradle build
      # - uses: eskatos/gradle-command-action@v1
      #   with:
      #     arguments: ${{ matrix.androidTestTask }} -I gradle/buildScanInit.gradle
